看完"提问的智慧"和"别像弱智一样提问"两篇文章收获很多，在读后感中打算结合自己的经历写写阅读后的的收获以及自己对于提问和独立解决问题的理解。

首先收获来源于提问是自我学习中非常重要的一环，问题的类型可以分为具体的技术问题和以和个人经验或感受为主的问题。具体的技术问题很好理解，互联网搜索确实是非常重要的技能，绝大多数的技术问题都可以通过搜索互联网来获得答案，我个人的经验是先使用中文搜索平台，相比较于广告颇多的百度，现在会更偏向于使用必应搜索多一点。不过往往我们从例如csdn这样的博客中获得到的信息更像是直接告诉我们应该运行哪些指令或是各种转载，相比之下知乎等其他偏向于专题类型的平台中对于问题的解释会更具体一些。所以当我并不仅仅想获得一个问题的解决方法，而是更想知道该问题为什么会发生，还有关于这个问题的其他知识的时候，往往需要借助官方手册等资料去深入理解。而且现在越来越觉得单纯解决这个问题还不够，需要多了解一下关于某个问题或技术的更多细节的时候，或者中文搜索平台能提供的帮助比较有限的时候，往往还是需要借助国外的搜索平台，而且往往需要直接阅读一手资料而不是翻译后的结果而且往往这些技术类问题搜索互联网后往往就会得到一定的答案。其次是个人经验或感受为主的问题，这些问题本来就没有明确的答案的，这个时候就要考虑是否有必要咨询一下身边或者互联网上的大佬们了，而且这些问题会因为回答者的身份而得到不同的答案。当然了时间就是金钱，需要明白别人是没有义务来帮助自己解决问题的。总结自己的情况来看，一般不会主动问第一类问题，而对于第二类问题，这两篇文章也教会了我如何高效地提问，以及在提问之前我需要先去做哪些努力，以及获得别人帮助后需要明白别人能够帮助自己的可贵性。

总结了个人的经验后，下面谈谈什么是好的提问和如何独立解决问题。好的提问需要具备成为问题的价值。在计算机领域，首先是 STFW, RTFM, RTFSC 不太能够帮助解决的问题，更抽象一点说就是，基于互联网上的公开信息也不能对该问题作出很好的解释，这种情况下可能是由于自己的操作导致的一个很罕见很罕见的程序错误（因为绝大多数人都没有遇到过这个类型的错误而被自己遇到了），极少数情况下会是因为发现了某个程序的 bug。对于计算机从业者来说遇到问题是一个非常普遍的现象，所以自己遇到的问题极有可能别人早就遇到过了或者工具的开发者早就考虑到了，所以这也就是 STFW, RTFM 的价值所在。回想起本科到现在的经历，好像确实没有遇到过不能通过互联网获得解答的技术问题。所以我向外寻求帮助的问题类型一般也都是经验和感受类的。这两篇文章中还提到一个很重要的一点就是提问的平台，正因为术业有专攻，所以选择正确的提问的平台和提问的对象也是非常重要的。其次就是问题的描述需要清楚而包含相当多的细节但精炼、直截了当不要花里胡哨、态度诚恳、展现自己对解决这个问题的所作的努力。最后就是对所有回答者进行感谢，必要的时候在获得帮助后总结这个问题的答案方便其他人获得相关信息。从以上描述来看，提出问题是一个不太容易的事，另一方面来说提出一个好的问题对社区的发展也是非常有帮助的，所以不要害怕提问，但是需要提出好的问题。前面提到了 STFW, RTFM 的价值，最后谈一下 RTFSC 的价值。目前个人的能力还没有达到这个程度，也就是不管是出于深度理解某个问题的症结所在还是出于对某个工具的探索兴趣，理论上这些最终肯定都能够从 RTFSC 中获得答案，因为本质上计算机的实现都多多少少基于 source code，所以 source code 是具有非常高的含金量的，尤其是在某个领域的研究中，阅读 source code 几乎是必须的，所以 STFW, RTFM, RTFSC 这三者对于独立解决问题的帮助是层层递进的。

最后做个简单的总结，在探索和学习的过程中不要害怕向专业人员提问，但是重要的是需要学会提有价值的问题。STFW, RTFM, RTFSC 往往能够解决绝大多数的困惑，在这个过程中也能提高自己的能力，需要多花时间在独立解决问题上。